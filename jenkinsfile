pipeline {
  agent any
  environment {
    PATH = "${PATH}:${getTerraformPath()}"
  }
 
  stages {
    stage('create-s3-bucket') {
      steps {
        sript{
         createS3bucket('S3://jenkins-ansible-terraform-git-instigration-27')
        }
      }
    }
    stage('terraform init & apply -dev') {
      steps {
        sh returnStatus: true, script: 'terraform workspace new dev'
        sh 'terraform init'
        sh 'terraform destroy --auto-approve'
      }
    }
     stage('terraform init & apply -prod') {
      steps {
        sh returnStatus: true, script: 'terraform workspace new prod'
        sh 'terraform init'
        sh 'terraform destroy --auto-approve'
      }
    }
  }
}

def getTerraformPath() {
  def tfHome = tool name: 'terraform-server', type: 'terraform'
  return tfHome
}
def createS3bucket(bucketName) {
  sh returnStatus: true, script" "aws S3 mb ${bucketName} --region ap-south-1"
}
